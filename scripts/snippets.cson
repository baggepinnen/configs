# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson


'.source.toml':
  'project':
    'prefix': 'project'
    'body': ' name = "$1"\n version = "0.0.0"\n author = ["Fredrik Bagge Carlson <baggepinnen@gmail.com>"]'

  'author':
    'prefix':'author'
    'body':'author = "Fredrik Bagge Carlson <baggepinnen@gmail.com>"'

'.source.weave.md':
  'julia':
    'prefix': 'julia'
    'body': '```{julia; echo=true; out_width="0.7\\textwidth"}\n$1\n```'

'.string.docstring.julia':
  'ref':
    'prefix': 'ref'
    'body': '[`$1`](@ref)$2'

  'julia':
      'prefix': 'julia'
      'body': '```julia\n$1\n```'

'.source.gfm':
  'docref':
    'prefix': 'docref'
    'body': '[`$1`](@ref)$2'

  'julia':
      'prefix': 'julia'
      'body': '```julia\n$1\n```'

  'ref':
      'prefix': 'ref'
      'body': '[`$1`](@ref)$2'

'.source.julia':
  'serialize':
      'prefix': 'serialize'
      'body': 'serialize("$1",$2)\n$2 = deserialize("$1")'

  'loglog':
      'prefix': 'loglog'
      'body': 'plot($1, xscale=\:log10, yscale=\:log10)'

  'semilogx':
      'prefix': 'semilogx'
      'body': 'plot($1, xscale=:log10)'

  'semilogy':
      'prefix': 'semilogy'
      'body': 'plot($1, yscale=:log10)'

  'yscale':
      'prefix': 'yscale'
      'body': 'yscale=:log10'

  'xscale':
      'prefix': 'xscale'
      'body': 'xscale=:log10'

  'walkdir':
    'prefix': 'walkdir'
    'body': 'for (root, dirs, files) in walkdir(root)\n    for file in files\n        joinpath(root, file)\n    end\nend'

  'pkgdir':
    'prefix': 'pkgdir'
    'body': 'joinpath(dirname(pathof($1)), "$2")$3'

  'logspace':
    'prefix': 'logspace'
    'body': 'exp10.(LinRange($1, $2, $3))$4'

  'linspace':
    'prefix': 'linspace'
    'body': 'LinRange($1, $2, $3)$4'

  'eye':
    'prefix': 'eye'
    'body': 'I($1)$2'

  'TODO':
    'prefix': 'todo'
    'body': '# TODO: $1'

  'iter':
    'prefix': 'iter'
    'body': 'function Base.iterate($1::$2, state=$3)\n    state == length($4) && return nothing\n     ($3,state+1)\nend\nBase.length($1::$2) = $5\n'

  'esc':
    'prefix': 'esc'
    'body': '\$(esc($1))$2'


'.text.tex.latex':
  'label':
    'prefix': 'label'
    'body': '\\\\label{$1:$2} $3'

  'includegraphics':
    'prefix': 'includegraphics'
    'body': '\\\\includegraphics[width=$1\\\\linewidth]{$2}'

  'dfrac':
    'prefix': 'dfrac'
    'body': '\\\\dfrac{$1}{$2}'

  'dot':
    'prefix': 'dot'
    'body': '\\\\dot{$1}$2'

  'emph':
    'prefix': 'emph'
    'body': '\\\\emph{$1}$2'

  'note':
    'prefix': 'note'
    'body': '\\\\note{$1}'

  'footnote':
    'prefix': 'footnote'
    'body': '\\\\footnote{$1}'

  'italics':
    'prefix': 'italics'
    'body': '\\\\textit{$1}$2'

  'bold':
    'prefix': 'bold'
    'body': '\\\\textbf{$1}$2'

  'figure':
    'prefix': 'figure'
    'body': '\\\\begin{figure}[htp]\n\t\\\\centering\n\t\\\\includegraphics[width=$1\\\\linewidth]{$2}\n\t\\\\caption{$3}\n\t\\\\label{$4}\n\\\\end{figure}'

  'frame':
    'prefix': 'frame'
    'body': '%====================================================================\n%====================================================================\n\\\\begin{frame}{$1}{$2}\n\\\\end{frame}\n'

  'Cref':
    'prefix': 'cref'
    'body': '\\\\cref{$1}'

  'Labelcref':
    'prefix': 'labelcref'
    'body': '\\\\labelcref{$1}'

  'block':
    'prefix': 'block'
    'body': '\\\\begin{block}{$1}\n\\\\end{block}\n'

  'align':
    'prefix': 'align'
    'body': '\\\\begin{align$1}\n$2\\\\end{align$1}\n'

  'usepackage':
    'prefix': 'usepackage'
    'body': '\\\\usepackage{$1}'

  'Comment':
      'prefix': 'comm'
      'body': '\\\\cmt{$1}'


  'teletype':
      'prefix': 'tt'
      'body': '\\\\texttt{$1}'

  'juliaalg':
      'prefix': 'juliaalg'
      'body': '\\\\begin{algorithm}\n\\\\caption{$1}\n\\\\label{alg:$2}\n\\\\begin{minted}[breaklines,escapeinside=||,mathescape=true, numbersep=3pt, gobble=0, fontsize=\\\\small, framesep=2mm]{julia}\n$3\\\\end{minted}\n\\\\end{algorithm}'

    'julia':
        'prefix': 'julia'
        'body': '\\\\begin{minted}[breaklines,escapeinside=||,mathescape=true, numbersep=3pt, gobble=0, frame=lines, fontsize=\\\\small, framesep=2mm]{julia}\n$3\\\\end{minted}\n'
  'columns':
      'prefix': 'columns'
      'body':
        '    \\\\begin{columns}\n
                \t\\\\begin{column}{0.5\\\\textwidth}\n
                \t\\\\end{column}\n
                \t\\\\begin{column}{0.5\\\\textwidth}\n
                \t\\\\end{column}\n
            \\\\end{columns}\n
        '
